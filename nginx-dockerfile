# Use busybox como a imagem base
FROM busybox:latest

# Adicionar wget
RUN wget https://busybox.net/downloads/binaries/1.21.1/busybox-x86_64 && \
    mv busybox-x86_64 /bin/busybox && \
    chmod +x /bin/busybox && \
    /bin/busybox --install

# Instalar binutils
RUN echo "Instalando binutils..." && \
    wget http://ftp.gnu.org/gnu/binutils/binutils-2.30.tar.gz && \
    tar -xzvf binutils-2.30.tar.gz && \
    cd binutils-2.30 && \
    ./configure && \
    make && \
    make install && \
    cd / && \
    rm -rf binutils-2.30* && \
    echo "Binutils instalado com sucesso."

# Instalar gcc
RUN echo "Instalando gcc..." && \
    wget http://ftp.gnu.org/gnu/gcc/gcc-8.3.0/gcc-8.3.0.tar.gz && \
    tar -xzvf gcc-8.3.0.tar.gz && \
    cd gcc-8.3.0 && \
    ./contrib/download_prerequisites && \
    mkdir build && \
    cd build && \
    ../configure --disable-multilib && \
    make -j$(nproc) && \
    make install && \
    cd / && \
    rm -rf gcc-8.3.0* && \
    echo "GCC instalado com sucesso."

# Baixar e instalar o Nginx
RUN echo "Baixando e instalando o Nginx..." && \
    wget http://nginx.org/download/nginx-1.21.6.tar.gz && \
    tar -xzvf nginx-1.21.6.tar.gz && \
    cd nginx-1.21.6 && \
    ./configure --without-http_rewrite_module --without-http_gzip_module && \
    make && \
    make install && \
    cd / && \
    rm -rf nginx-1.21.6* && \
    echo "Nginx instalado com sucesso."

# Criar diretório para logs do Nginx
RUN echo "Criando diretório para logs do Nginx..." && \
    mkdir -p /var/log/nginx && \
    echo "Diretório criado com sucesso."

# Copiar o arquivo de configuração do Nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Expor a porta 80
EXPOSE 80

# Definir o entrypoint para executar o Nginx em primeiro plano
ENTRYPOINT ["nginx", "-g", "daemon off;"]
