# Use alpine como a imagem base
FROM alpine:latest

# Instalar dependências necessárias para compilar e instalar o Nginx
RUN apk update && \
    apk add --no-cache \
    build-base \
    gcc \
    pcre-dev \
    zlib-dev \
    openssl-dev \
    wget \
    && echo "Dependências instaladas com sucesso."

# Baixar a versão mais recente do Nginx
RUN echo "Baixando a versão mais recente do Nginx..." && \
    NGINX_VERSION=$(wget -qO- https://nginx.org/en/download.html | grep -o 'nginx-[0-9]*\.[0-9]*\.[0-9]*' | head -n1 | cut -d'-' -f2) && \
    wget -O nginx-$NGINX_VERSION.tar.gz http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz && \
    tar -xzvf nginx-$NGINX_VERSION.tar.gz && \
    cd nginx-$NGINX_VERSION && \
    ./configure --without-http_rewrite_module --without-http_gzip_module && \
    make && \
    make install && \
    cd / && \
    rm -rf nginx-$NGINX_VERSION* && \
    echo "Nginx $NGINX_VERSION instalado com sucesso."

# Criar diretório para logs do Nginx
RUN echo "Criando diretório para logs do Nginx..." && \
    mkdir -p /var/log/nginx && \
    echo "Diretório criado com sucesso."

# Definir o entrypoint para criar o arquivo nginx.conf e iniciar o Nginx
ENTRYPOINT ["sh", "-c", \
            "echo 'events {}' > /etc/nginx/nginx.conf && \
             echo 'http { server { listen 80; location / { root /usr/share/nginx/html; index index.html index.htm; } } }' >> /etc/nginx/nginx.conf && \
             nginx -g 'daemon off;'"]
